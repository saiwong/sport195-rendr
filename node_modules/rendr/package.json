{
  "name": "rendr",
  "version": "0.0.2",
  "description": "A small web framework that lets you use Node and Backbone to render on both sides.",
  "main": "index.js",
  "scripts": {
    "test": "mocha --ui bdd --reporter spec --ignore-leaks $(find ./test -name *.test.*) --timeout 6000 --require coffee-script",
    "postinstall": "node ./scripts/postinstall.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/spikebrehm/rendr.git"
  },
  "dependencies": {
    "coffee-script": "*",
    "underscore": "1.4.4",
    "backbone": "1.0.0",
    "handlebars": "1.0.7",
    "async": "0.1.22",
    "qs": "0.5.1",
    "express": "~3.0.6",
    "validator": "0.4.21"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "sinon": "1.4.2",
    "expect.js": "0.1.2"
  },
  "keywords": [
    "Backbone",
    "view",
    "web",
    "framework",
    "rendr",
    "render"
  ],
  "author": {
    "name": "Spike Brehm",
    "email": "ocelot@gmail.com"
  },
  "license": "BSD",
  "readme": "Rendr\n=====\n\nRendr is a small library that allows you to run your [Backbone.js](http://backbonejs.org/) apps seamlessly on both the client and the server. Allow your web server to serve fully-formed HTML pages to any deep link of your app, while preserving the snappy feel of a traditional Backbone.js client-side MVC app.\n\nCheck out the [blog post](http://nerds.airbnb.com/weve-launched-our-first-nodejs-app-to-product) for a more thorough introduction to Rendr.\n\nToo see how to use Rendr to build a simple web app, check out [airbnb/rendr-app-template](https://github.com/airbnb/rendr-app-template).\n\n\n## The Premise\n\nOur hypothesis is that there has to be a better way to build rich web apps today. In the last few years, we've seen more of the application moved to the client-side, with JavaScript representations of views, templates, and models. This can result in interactive, native-style apps, but it also poses challenges. SEO, performance, and maintainability become issues with splitting up your app into two distinct codebases, often in different languages.\n\n\n## The Goals\n\nRendr is intended to be a building block along the way to this envisionsed future of web apps that can be run on either side of the wire according to the needs of your application.\n\nSome specific design goals:\n\n* Write Models, Views, Controllers agnostic to environment\n* Minimize `if (server) {...} else {â€¦}`\n* Talk to RESTful API\n* Library, not a framework\n* Hide complexity in library\n* No server-side DOM\n* Simple Express middleware\n\n## What's Included\n\nRendr does not attempt to be a fully-fledged, batteries-included application framework. Instead, it follows Backbone's lead by imposing minimal structure, allowing the developer to use the library in the most appropriate way for their application.\n\n### Base classes\n\n#### `BaseView`\n\nInherits from `Backbone.View`.\n\n#### `BaseModel`\n\nInherits from `Backbone.Model`.\n\n#### `BaseCollection`\n\nInherits from `Backbone.Collection`.\n\n#### `BaseApp`\n\nInherits from `Backbone.Model`.\n\n#### `BaseRouter`\n\n#### `ClientRouter`\n\nInherits from `BaseRouter`.\n\n#### `ServerRouter`\n\nInherits from `BaseRouter`.\n\n\n## What's Not Included\n\n### Express app\n\nRather than owning your entire Express app, Rendr simply provides some useful middleware that you can mount into your existing Express app.\n\n### Asset pipeline\n\nAsset bundling and serving are outside of Rendr's scope. However, does it have some specific requirements for JavaScript packaging to support modules that are accessible in the CommonJS style on both the client and server. The [example app](https://github.com/airbnb/rendr-app-template) uses [Stitch](https://github.com/sstephenson/stitch) for this, though you could also do this with other tools, such as [Browserify](https://github.com/substack/node-browserify).\n\n## TODO\n\nWhile we do have it powering a few apps in production here at Airbnb, Rendr is still a prototype. It's a [spike](http://scaledagileframework.com/spikes/); a functional proof-of-concept of a shared client-server architecture based on Backbone. Thus, it carries over a number of design quirks specific to its original use case, and it's not yet very generalized and modular.\n\nSome of the more glaring things to do:\n\n* Support Browserify and streamline module packaging.\n* Support templating solutions other than Handlebars.\n* Pull out routing code into separate module and share it between client and server, to prevent bugs arising from using `Backbone.history` to process routes in the client, and Express to process routes on the server.\n\n## Contributing\n\nWe'd love to see what the community can come up with! There are no doubt a number of developers who are tackling this same problem, and we can learn from each other. If you have a bug fix or feature proposal, submit a pull request with a clear description of the change, plus tests.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "rendr@0.0.2",
  "dist": {
    "shasum": "8ca6ac6ae8fb4dfcd2e19f7196bac65a6bff99f4"
  },
  "_resolved": "git+ssh://git@github.com/:airbnb/rendr.git#2c9aa6ed8d4f743a066cab2c3c64cfa0ec22e723",
  "_from": "rendr@git+ssh://git@github.com:airbnb/rendr.git#2c9aa6ed8d4f743a066cab2c3c64cfa0ec22e723"
}
